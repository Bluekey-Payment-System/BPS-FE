name: dev-cicd

on:
  push:
    branches: [develop]
  pull_request:
    branches: [develop]

env:
  LATEST_TAG: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_DEV_REPO }}:latest

jobs:
  ci:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Clone Repository
        uses: actions/checkout@v3

      - name: Set Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x

      - name: Set env file
        run: |
          touch .env.local
          echo "${{ secrets.ENV_DEV }}" > .env.local
      
      - name: Run test in container
        run: |
          docker compose -f docker/local/docker-compose.yml run yarn jest
      
      - name: Run build in container
        run: |
          docker compose -f docker/local/docker-compose.yml run yarn build

  cd:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - name: Clone Repository
        uses: actions/checkout@v3

      - name: Set Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x

      - name: Set env file
        run: |
          touch .env.dev
          echo "${{ secrets.ENV_DEV }}" > .env.dev
      
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./docker/development/Dockerfile
          push: true
          tags: ${{ env.LATEST_TAG }}

      - name: Set docker-compose file
        run: |
          cp ./docker/development/docker-compose.yml docker-compose.dev.yml

      - name: Transfer docker-compose file to production server
        uses: appleboy/scp-action@master
        with:
          username: ec2-user
          host: ${{ secrets.SSH_HOST }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "./docker-compose.dev.yml"
          target: "/home/ec2-user/bluekey/"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Deploy dev server to production
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ec2-user
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /home/ec2-user/bluekey
            docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
            docker rm $(docker ps -a -q)
            docker rmi ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_DEV_REPO }}
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_DEV_REPO }}
            sudo docker-compose -f docker-compose.dev.yml up -d
            sudo docker image prune -f